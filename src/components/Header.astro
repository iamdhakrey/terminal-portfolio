---
import { NAVIGATION } from "../consts";
import "../styles/global.css";

const date = new Date();
const dateString = date.toLocaleDateString();
const timeString = date.toLocaleTimeString();
---

<nav
	class="border-b font-mono"
	style={{
		backgroundColor: "var(--theme-background)",
		borderColor: "var(--theme-border)",
	}}
>
	<div class="max-w-screen-xl mx-auto px-2 sm:px-4 py-2 sm:py-3">
		{/* Terminal-style navigation */}
		<div class="flex items-center justify-between">
			{/* Left side - Terminal prompt */}
			<div class="flex items-center space-x-1 text-xs sm:text-sm">
				<a
					href={NAVIGATION.brandUrl}
					class="font-bold text-sm sm:text-base hover:opacity-75 transition-opacity"
					style={{ color: "var(--theme-primary)" }}
				>
					{NAVIGATION.brandName}
				</a>
			</div>

			{/* Center - System info */}
			{
				NAVIGATION.systemInfo.showDateTime && (
					<div
						class="hidden lg:flex items-center space-x-4 text-xs"
						style={{ color: "var(--theme-muted)" }}
					>
						<span>{NAVIGATION.systemInfo.shell}</span>
						<span>â€¢</span>
						<span
							id="clock"
							style={{ color: "var(--theme-primary)" }}
						>
							{dateString} â€¢ {timeString}
						</span>
					</div>
				)
			}
			<script>
				const el = document.getElementById("clock");
				setInterval(() => {
					if (el) {
						el.textContent =
							new Date().toLocaleDateString() +
							" â€¢ " +
							new Date().toLocaleTimeString();
					}
				}, 1000);
			</script>

			{/* Right side - Navigation commands & Theme selector */}
			<div
				class="flex items-center space-x-2 sm:space-x-4 text-xs sm:text-sm"
			>
				{/* Theme toggle button */}
				<!-- <button
                    class="px-2 py-1 rounded text-xs font-mono hover:opacity-75 transition-opacity"
                    style={{
                        backgroundColor: "var(--theme-accent)",
                        color: "var(--theme-background)",
                    }}
                    title={`Current: ${themeDisplayNames[currentTheme]} (click to toggle)`}
                >
                    ðŸŽ¨ {currentTheme}
                </button> -->
				<button
					id="themeToggle"
					class="px-2 py-1 rounded text-xs font-mono hover:opacity-75 transition-opacity"
					style="background-color: var(--theme-accent); color: var(--theme-background);"
				>
					ðŸŽ¨ Dark Terminal
				</button>

				{
					NAVIGATION.links.map((link, index) => (
						<span>
							{index > 0 && (
								<span
									class="hidden sm:inline"
									style={{ color: "var(--theme-border)" }}
								>
									|
								</span>
							)}
							{link.external ? (
								<a
									href={link.path}
									target="_blank"
									rel="noopener noreferrer"
									class="hover:opacity-75 font-source tracking-wide transition-opacity"
									style={{
										color:
											link.color || "var(--theme-muted)",
									}}
								>
									<span class="hidden sm:inline">
										{link.name === "tg"
											? "@"
											: link.name === "gh"
												? "git://"
												: "./"}
									</span>
									{link.name}
								</a>
							) : (
								<a
									href={link.path}
									class="hover:opacity-75 font-source tracking-wide transition-opacity"
									style={{
										color:
											link.color || "var(--theme-muted)",
									}}
								>
									<span class="hidden sm:inline">
										{link.name === "home" ? "~/" : "./"}
									</span>
									{link.name}
								</a>
							)}
						</span>
					))
				}
			</div>
		</div>

		{/* Mobile date/time */}
		{
			NAVIGATION.systemInfo.showDateTime && (
				<div
					class="lg:hidden mt-2 text-xs text-center"
					style={{ color: "var(--theme-muted)" }}
				>
					{dateString} {timeString}
				</div>
			)
		}
	</div>
</nav>

<script>
	import { getThemeDisplayNames } from "../utils/theme";

	// theme toggle
	const themeDisplayNames = getThemeDisplayNames();
	const themes = Object.keys(themeDisplayNames);
	console.log("Available themes:", themes);

	const themeToggle = document.getElementById("themeToggle");
	let current = 0;

	console.log("Current theme:", themes[current]);
	if (themeToggle) {
		themeToggle.addEventListener("click", () => {
			current = (current + 1) % themes.length;
			document.documentElement.setAttribute(
				"data-theme",
				themes[current],
			);
			themeToggle.textContent = `ðŸŽ¨ ${themeDisplayNames[themes[current]]}`;
		});
	}
</script>
